import type { Generated, Insertable, Selectable, Updateable } from "kysely";
import type { SqliteWasmDatabase } from "sqlite-wasm-kysely";

export function applyLogDatabaseSchema(
	sqlite: SqliteWasmDatabase
): SqliteWasmDatabase {
	return sqlite.exec`
	CREATE TABLE IF NOT EXISTS log (
		key TEXT,
		message TEXT,
		level TEXT,
		created_at TEXT DEFAULT CURRENT_TIMESTAMP NOT NULL
	) STRICT;

	-- Garbage collect old logs (can be more sophisticated in the future)
	DELETE FROM log WHERE created_at < datetime('now', '-1 day');
`;
}



export type Log = Selectable<LogTable>;
export type NewLog = Insertable<LogTable>;
export type LogUpdate = Updateable<LogTable>;
export type LogTable = {
	/**
	 * The key of the log entry.
	 *
	 * @example "lix.file_queue.skipped"
	 */
	key: string;
	/**
	 * The message of the log entry.
	 *
	 * @example "Something went wrong"
	 */
	message: string;
	/**
	 * The level of the log entry.
	 *
	 * @example "info", "warn", "error"
	 */
	level: string;
	/**
	 * The timestamp of the log entry.
	 *
	 * Automatically generated by the database.
	 */
	created_at: Generated<string>;
};
